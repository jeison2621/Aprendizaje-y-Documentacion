1 - Git - GitHub

 Git:



 es un código libre y abierto sistema de control de versiones distribuidos diseñado para manejar todo, desde pequeño hasta proyectos muy grandes con velocidad y eficiencia.

 Git es fácil de aprender y tiene un diminutas huellas con un rendimiento rápido relámposo. Exclasta herramientas SMC como Subversion, CVS, Perforce y ClearCase con características como ramificación local barata, zonas de escenificación 
 conveniente, y múltiples flujos de trabajo.

    Configuración Básica

Configurar Nombre que salen en los commits          //git config --global user.name "DEV_Jeison_Moyano"
 Configurar Email                                   //git config --global user.email andres.moyano@misena.edu.co
 
	git init                    //Iniciando repositorio
    git add <archivo>           //Añadimos un archivos para el commit
    git rm <archivo>            // elimina un archivo del reporsitorio
    git add .                   //Añadimos todos los archivos para el commit
    git status 

    COMMIT
    git commit -m "Texto del commit"
    git log --oneline --graph   //Muestra graficos de los commits
	git reset --soft HEAD^      //Devuelve el ultimo commit que se hizo y pone los cambios en staging
	git reset --hard HEAD^      //Devuelve el ultimo commit y todos los cambios
	git reset --hard HEAD^^     //Devuelve los 2 ultimo commit y todos los cambios
	git log --oneline --stat    //Muestras los cambios en los commits

    git clone <url>                 // 
    git push origin master          //
    git push <origien> <branch>     //
    git log                         //Muestra los logs de los commits
    git log --oneline --graph       //
    git remote add origin <url>     //Agregar repositorio Remoto
    git remote set-url origin <url> //cambiar de remoto
    git remote rm <name/origin>     //Remover repositorio         
    
    git branch <nameBranch>         //Crea un branch
    git branch                      // Listar Branch
    git branch -d <nameBranch>      //Comando -d elimina el branch y lo une al master
    git branch -D <nameBranch>      //Elimina sin preguntar
    git fetch                       //Verifica cambios en el repositorio online con el local
    git diff                        //Muestra los cambios realizados a un archivo
	git diff --staged               //Muestra los cambios realizados a un archivo
    

 Descarga:       https://git-scm.com/download/win
 Documentacion:  https://git-scm.com/book/es/v2


 GitHub:

 Curso de Git y GitHub:  https://www.youtube.com/watch?v=3GymExBkKjE&ab_channel=MoureDevbyBraisMoure 

 LECCIONES DEL CURSO:
    00:00:00 | Introducción
    00:03:15 | 1 - Introducción a Git
    00:10:21 | 2 - Historia de Git
    00:14:35 | 3 - Instalación de Git
    00:24:00 | 4 - Comandos básicos de la terminal
    00:30:13 | 5 - Configuración de Git
    00:36:47 | 6 - "git init"
    00:42:23 | 7 - Ramas en Git
    00:45:21 | 8 - "git add" y "git commit"
    00:53:27 | 9 - "git log" y "git status"
    00:57:48 | 10 - "git checkout" y "git reset"
    01:03:02 | 11 - "git alias"
    01:05:05 | 12 - Fichero .gitignore
    01:09:04 | 13 - "git diff"
    01:11:54 | 14 - Desplazamiento en una rama
    01:19:31 | 15 - "git reset --hard" y "git reflog"
    01:27:37 | 16 - "git tag"
    01:37:36 | 17 - "git branch" y "git switch"
    01:49:06 | 18 - "git merge"
    01:54:29 | 19 - Resolución de conflictos en Git
    02:03:42 | 20 - "git stash"
    02:10:11 | 21 - Reintegración de ramas en Git
    02:16:26 | 22 - Eliminación de ramas en Git
    02:22:27 | 23 - Introducción a GitHub
    02:27:53 | 24 - Primeros pasos en GitHub
    02:30:39 | 25 - Repositorio personal
    02:42:40 | 26 - Local y Remoto
    02:47:32 | 27 - Autenticación SSH en GitHub
    03:00:45 | 28 - Repositorio proyecto
    03:02:29 | 29 - "git remote"
    03:07:19 | 30 - Subida de un proyecto a GitHub
    03:11:31 | 31 - "git fetch" y "git pull"
    03:16:41 | 32 - "git clone"
    03:19:55 | 33 - "git push"
    03:21:31 | 34 - "Fork" en GitHub
    03:27:02 | 35 - Flujo colaborativo en GitHub
    03:30:46 | 36 - "Pull Request (PR)" en GitHub
    03:35:30 | 37 - Ejercicio práctico
    03:37:41 | 38 - Resolución de conflictos en Pull Requests
    03:53:31 | 39 - Sincronización de un Fork en GitHub
    03:56:53 | 40 - Markdown en GitHub
    04:00:37 | 41 - Herramientas gráficas (GUI) para Git y GitHub
    04:18:36 | 42 - Git y GitHub "flow"
    04:35:15 | 43 - Ejemplo Gitflow
    04:52:49 | 44 - "git cherry-pick" y "git rebase"
    05:00:05 | 45 - GitHub Pages Y Actions
    05:04:24 | Próximos pasos

2 - Visual Studio Code

    Url descarga: https://code.visualstudio.com
    Documentacion : https://code.visualstudio.com/docs/nodejs/nodejs-tutorial

 Tutorial: https://www.youtube.com/watch?v=CxF3ykWP1H4&ab_channel=MoureDevbyBraisMoure

  ⏰  ÍNDICE:
       00:00 | Visual Studio Code
       00:51 | Mejora tu inglés
       02:11 | Introducción e instalación
       03:15 | Interfaz de usuario
       04:19 | Editor de código
       04:57 | Extensiones
       06:04 | Depuración
       06:29 | Acciones
       07:29 | Configuración
        08:02 | Conclusiones
 
3 - Intro Javascript (Hola Mundo (Consola)) 

    Documentacion: https://code.visualstudio.com/docs/nodejs/nodejs-tutorial
    *********
    Desafio
    *********
 Empecémos creando la aplicación más simple de Node.js, "Hola World".
 Crear una carpeta vacía llamada "hola", navegar y abrir código VS:(desde linea de comandos)
 
 mkdir hola (creara la carpeta)
 cd hello   (ingresara a la carpeta)
 code .      (Abrirar una ventana nueva de VS en esa ubicacion)
 
 -Desde la barra de herramientas de archivo Explorer, pulse el botón Nuevo Archivo: y nombre el archivo app.js:
 -Crear una simple variable de cadena en app.js y enviar el contenido de la cadena a la consola:
 
 app.js
 --------------------------
  var msg = 'Hello World';
  console.log(msg);
 
  -------------------------
 
 -guarde el archivo (Ctrl-S)
 
 
 Corriendo Hola Mundo
 
 Es simple de correr. app.jscon Node.js. Desde un terminal, simplemente escriba:
 
 
 
 Terminal 
 -----------------------
 node app.js
 -----------------------

4 - Introduccion a Express (Hola Mundo)

  Documentacion: https://code.visualstudio.com/docs/nodejs/nodejs-tutorial

  *********** Una aplicación Express ***********

    Express es un marco de aplicación muy popular para construir y ejecutar aplicaciones Node.js. Puede andarda (crear) una nueva aplicación Express usando la herramienta Express Generator. El Generador Express se envía como módulo npm e instala mediante la herramienta de línea de comando (npm).

    Sugerir: Para probar que tienes npm instalados correctamente en su ordenador, tipo npm --helpdesde un terminal y usted debe ver la documentación de uso.
    
 1 - Instale el Generador Express ejecutando lo siguiente desde un terminal:

    Terminal
    ----------------------------------------------
    npm install -g express-generator
    ----------------------------------------------
    El (-g)El interruptor instala el Generador Express de todo el mundo en su máquina para que pueda ejecutarlo desde cualquier lugar.

 2 - hora podemos andarda una nueva aplicación Express llamada | myExpressApp |corrigando:
    
    Terminal
    ---------------------------------------------    
    express myExpressApp --view pug ///
    ---------------------------------------------
        si aparece este error: 

        ***************************************************************************************************************************
        Terminal error:
        ----------------------------------------------------------------------------------------------------------------------------
        express : No se puede cargar el archivo C:\Users\andre\AppData\Roaming\npm\express.ps1 porque la ejecución de scripts está deshabilitada en este sistema. Para   obtener más información, consulta el tema about_Execution_Policies en https:/go.microsoft.com/fwlink/?LinkID=135170. En línea: 1 Carácter: 1 + express myExpressApp --view pug + ~~~~~~~     + CategoryInfo          : SecurityError: (:) [], PSSecurityException     + FullyQualifiedErrorId : UnauthorizedAccess
        ----------------------------------------------------------------------------------------------------------------------------
        (Tranquilo)
        solo abre el power shell como administrador y ejecuta el siguiente comando Set-ExecutionPolicy Unrestricted esto solucionara tu         problema y podras ejectar scripts en la consola de VS Code
        ****************************************************************************************************************************

     Esto crea una nueva carpeta llamada | myExpressApp| con el contenido de su aplicación. El |--view puglos|  parámetros indican al generador que utilice el motor de plantilla de pug.

 3 - Para instalar todas las dependencias de la aplicación (enviada de nuevo como módulos npm), vaya a la nueva carpeta y ejecute npm install:

    --------------------
    cd myExpressApp
    npm install
    --------------------
 4 - En este punto, debemos probar que nuestra aplicación se ejecuta. La aplicación Express generada tiene una | package.json |archivo que incluye un start guión para ejecutar node ./bin/www. Esto comenzará la aplicación Node.js en ejecución.

    Desde un terminal en la carpeta de aplicación Express, ejecute:
    
    Terminal
    -------------------------
     npm start
    -------------------------
    El servidor web Node.js comenzará y puede navegar a http://localhost:3000 para ver la aplicación en ejecución.
    Luego :
    Cierre el navegador y de un terminal en el |myExpressApp| carpeta, detenga el servidor Node.js pulsando CTRL-C.


    La documentación de Node.js y Express hace un gran trabajo explicando cómo construir aplicaciones ricas utilizando la plataforma y el marco. Visual Studio Code te hará más productivo en el desarrollo de este tipo de aplicaciones proporcionando grandes experiencias de edición de código y navegación.

5 - Depuracion de Aplicaciones  

    Documentacion: https://code.visualstudio.com/docs/nodejs/nodejs-debugging
 

6 - Despliegue de Aplicaciones 

    Documentacion: https://code.visualstudio.com/docs/nodejs/nodejs-deployment

7 - React(Hola Mundo)

    Documentacion: https://code.visualstudio.com/docs/nodejs/reactjs-tutorial 











